/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package cStopPow;

public class cStopPowJNI {
  public final static native long new_intp();
  public final static native long copy_intp(int jarg1);
  public final static native void delete_intp(long jarg1);
  public final static native void intp_assign(long jarg1, int jarg2);
  public final static native int intp_value(long jarg1);
  public final static native long new_floatp();
  public final static native long copy_floatp(float jarg1);
  public final static native void delete_floatp(long jarg1);
  public final static native void floatp_assign(long jarg1, float jarg2);
  public final static native float floatp_value(long jarg1);
  public final static native long new_IntVector__SWIG_0();
  public final static native long new_IntVector__SWIG_1(long jarg1);
  public final static native long IntVector_size(long jarg1, IntVector jarg1_);
  public final static native long IntVector_capacity(long jarg1, IntVector jarg1_);
  public final static native void IntVector_reserve(long jarg1, IntVector jarg1_, long jarg2);
  public final static native boolean IntVector_isEmpty(long jarg1, IntVector jarg1_);
  public final static native void IntVector_clear(long jarg1, IntVector jarg1_);
  public final static native void IntVector_add(long jarg1, IntVector jarg1_, int jarg2);
  public final static native int IntVector_get(long jarg1, IntVector jarg1_, int jarg2);
  public final static native void IntVector_set(long jarg1, IntVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_IntVector(long jarg1);
  public final static native long new_FloatVector__SWIG_0();
  public final static native long new_FloatVector__SWIG_1(long jarg1);
  public final static native long FloatVector_size(long jarg1, FloatVector jarg1_);
  public final static native long FloatVector_capacity(long jarg1, FloatVector jarg1_);
  public final static native void FloatVector_reserve(long jarg1, FloatVector jarg1_, long jarg2);
  public final static native boolean FloatVector_isEmpty(long jarg1, FloatVector jarg1_);
  public final static native void FloatVector_clear(long jarg1, FloatVector jarg1_);
  public final static native void FloatVector_add(long jarg1, FloatVector jarg1_, float jarg2);
  public final static native float FloatVector_get(long jarg1, FloatVector jarg1_, int jarg2);
  public final static native void FloatVector_set(long jarg1, FloatVector jarg1_, int jarg2, float jarg3);
  public final static native void delete_FloatVector(long jarg1);
  public final static native long new_FloatVector2D__SWIG_0();
  public final static native long new_FloatVector2D__SWIG_1(long jarg1);
  public final static native long FloatVector2D_size(long jarg1, FloatVector2D jarg1_);
  public final static native long FloatVector2D_capacity(long jarg1, FloatVector2D jarg1_);
  public final static native void FloatVector2D_reserve(long jarg1, FloatVector2D jarg1_, long jarg2);
  public final static native boolean FloatVector2D_isEmpty(long jarg1, FloatVector2D jarg1_);
  public final static native void FloatVector2D_clear(long jarg1, FloatVector2D jarg1_);
  public final static native void FloatVector2D_add(long jarg1, FloatVector2D jarg1_, long jarg2, FloatVector jarg2_);
  public final static native long FloatVector2D_get(long jarg1, FloatVector2D jarg1_, int jarg2);
  public final static native void FloatVector2D_set(long jarg1, FloatVector2D jarg1_, int jarg2, long jarg3, FloatVector jarg3_);
  public final static native void delete_FloatVector2D(long jarg1);
  public final static native long new_DoubleVector__SWIG_0();
  public final static native long new_DoubleVector__SWIG_1(long jarg1);
  public final static native long DoubleVector_size(long jarg1, DoubleVector jarg1_);
  public final static native long DoubleVector_capacity(long jarg1, DoubleVector jarg1_);
  public final static native void DoubleVector_reserve(long jarg1, DoubleVector jarg1_, long jarg2);
  public final static native boolean DoubleVector_isEmpty(long jarg1, DoubleVector jarg1_);
  public final static native void DoubleVector_clear(long jarg1, DoubleVector jarg1_);
  public final static native void DoubleVector_add(long jarg1, DoubleVector jarg1_, double jarg2);
  public final static native double DoubleVector_get(long jarg1, DoubleVector jarg1_, int jarg2);
  public final static native void DoubleVector_set(long jarg1, DoubleVector jarg1_, int jarg2, double jarg3);
  public final static native void delete_DoubleVector(long jarg1);
  public final static native long new_DoubleVector2D__SWIG_0();
  public final static native long new_DoubleVector2D__SWIG_1(long jarg1);
  public final static native long DoubleVector2D_size(long jarg1, DoubleVector2D jarg1_);
  public final static native long DoubleVector2D_capacity(long jarg1, DoubleVector2D jarg1_);
  public final static native void DoubleVector2D_reserve(long jarg1, DoubleVector2D jarg1_, long jarg2);
  public final static native boolean DoubleVector2D_isEmpty(long jarg1, DoubleVector2D jarg1_);
  public final static native void DoubleVector2D_clear(long jarg1, DoubleVector2D jarg1_);
  public final static native void DoubleVector2D_add(long jarg1, DoubleVector2D jarg1_, long jarg2, DoubleVector jarg2_);
  public final static native long DoubleVector2D_get(long jarg1, DoubleVector2D jarg1_, int jarg2);
  public final static native void DoubleVector2D_set(long jarg1, DoubleVector2D jarg1_, int jarg2, long jarg3, DoubleVector jarg3_);
  public final static native void delete_DoubleVector2D(long jarg1);
  public final static native double StopPow_dEdx_MeV_um(long jarg1, StopPow jarg1_, double jarg2);
  public final static native double StopPow_dEdx_MeV_mgcm2(long jarg1, StopPow jarg1_, double jarg2);
  public final static native double StopPow_get_Emin(long jarg1, StopPow jarg1_);
  public final static native double StopPow_get_Emax(long jarg1, StopPow jarg1_);
  public final static native String StopPow_get_type(long jarg1, StopPow jarg1_);
  public final static native String StopPow_get_info(long jarg1, StopPow jarg1_);
  public final static native double StopPow_dEdx(long jarg1, StopPow jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_Eout(long jarg1, StopPow jarg1_, double jarg2, double jarg3) throws IllegalArgumentException;
  public final static native double StopPow_Ein(long jarg1, StopPow jarg1_, double jarg2, double jarg3) throws IllegalArgumentException;
  public final static native double StopPow_Thickness(long jarg1, StopPow jarg1_, double jarg2, double jarg3) throws IllegalArgumentException;
  public final static native double StopPow_Range(long jarg1, StopPow jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native int StopPow_get_mode(long jarg1, StopPow jarg1_);
  public final static native void StopPow_set_mode(long jarg1, StopPow jarg1_, int jarg2) throws IllegalArgumentException;
  public final static native int StopPow_MODE_LENGTH_get();
  public final static native int StopPow_MODE_RHOR_get();
  public final static native void delete_StopPow(long jarg1);
  public final static native void delete_StopPow_Plasma(long jarg1);
  public final static native double StopPow_Plasma_dEdx_field(long jarg1, StopPow_Plasma jarg1_, double jarg2, int jarg3);
  public final static native double StopPow_Plasma_dEdx_plasma_electrons(long jarg1, StopPow_Plasma jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_Plasma_dEdx_plasma_ions(long jarg1, StopPow_Plasma jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native void StopPow_Plasma_set_particle(long jarg1, StopPow_Plasma jarg1_, double jarg2, double jarg3) throws IllegalArgumentException;
  public final static native void StopPow_Plasma_set_field__SWIG_0(long jarg1, StopPow_Plasma jarg1_, long jarg2, DoubleVector jarg2_, long jarg3, DoubleVector jarg3_, long jarg4, DoubleVector jarg4_, long jarg5, DoubleVector jarg5_) throws IllegalArgumentException;
  public final static native void StopPow_Plasma_set_field__SWIG_1(long jarg1, StopPow_Plasma jarg1_, long jarg2) throws IllegalArgumentException;
  public final static native void StopPow_Plasma_set_field__SWIG_2(long jarg1, StopPow_Plasma jarg1_, long jarg2, DoubleVector jarg2_, long jarg3, DoubleVector jarg3_, long jarg4, DoubleVector jarg4_, long jarg5, DoubleVector jarg5_, double jarg6) throws IllegalArgumentException;
  public final static native void StopPow_Plasma_set_field__SWIG_3(long jarg1, StopPow_Plasma jarg1_, long jarg2, double jarg3) throws IllegalArgumentException;
  public final static native void StopPow_Plasma_on_field_change(long jarg1, StopPow_Plasma jarg1_);
  public final static native void delete_StopPow_PartialIoniz(long jarg1);
  public final static native void StopPow_PartialIoniz_set_particle(long jarg1, StopPow_PartialIoniz jarg1_, double jarg2, double jarg3);
  public final static native void StopPow_PartialIoniz_set_field__SWIG_0(long jarg1, StopPow_PartialIoniz jarg1_, long jarg2, DoubleVector jarg2_, long jarg3, DoubleVector jarg3_, long jarg4, DoubleVector jarg4_, long jarg5, DoubleVector jarg5_, long jarg6, DoubleVector jarg6_, double jarg7);
  public final static native void StopPow_PartialIoniz_set_field__SWIG_1(long jarg1, StopPow_PartialIoniz jarg1_, long jarg2, double jarg3) throws IllegalArgumentException;
  public final static native long new_StopPow_SRIM(String jarg1) throws java.io.IOException;
  public final static native void delete_StopPow_SRIM(long jarg1);
  public final static native double StopPow_SRIM_dEdx_MeV_um(long jarg1, StopPow_SRIM jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_SRIM_dEdx_MeV_mgcm2(long jarg1, StopPow_SRIM jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_SRIM_get_Emin(long jarg1, StopPow_SRIM jarg1_);
  public final static native double StopPow_SRIM_get_Emax(long jarg1, StopPow_SRIM jarg1_);
  public final static native long new_StopPow_LP__SWIG_0(double jarg1, double jarg2, long jarg3, DoubleVector jarg3_, long jarg4, DoubleVector jarg4_, long jarg5, DoubleVector jarg5_, long jarg6, DoubleVector jarg6_) throws IllegalArgumentException;
  public final static native long new_StopPow_LP__SWIG_1(double jarg1, double jarg2, long jarg3) throws IllegalArgumentException;
  public final static native long new_StopPow_LP__SWIG_2(double jarg1, double jarg2, long jarg3, DoubleVector jarg3_, long jarg4, DoubleVector jarg4_, long jarg5, DoubleVector jarg5_, long jarg6, DoubleVector jarg6_, double jarg7) throws IllegalArgumentException;
  public final static native long new_StopPow_LP__SWIG_3(double jarg1, double jarg2, long jarg3, double jarg4) throws IllegalArgumentException;
  public final static native void delete_StopPow_LP(long jarg1);
  public final static native double StopPow_LP_dEdx_MeV_um(long jarg1, StopPow_LP jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_LP_dEdx_MeV_mgcm2(long jarg1, StopPow_LP jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_LP_dEdx_field(long jarg1, StopPow_LP jarg1_, double jarg2, int jarg3) throws IllegalArgumentException;
  public final static native void StopPow_LP_set_collective(long jarg1, StopPow_LP jarg1_, boolean jarg2);
  public final static native void StopPow_LP_set_quantum(long jarg1, StopPow_LP jarg1_, boolean jarg2);
  public final static native void StopPow_LP_set_xtf_factor(long jarg1, StopPow_LP jarg1_, double jarg2);
  public final static native void StopPow_LP_set_xtf_collective_factor(long jarg1, StopPow_LP jarg1_, double jarg2);
  public final static native void StopPow_LP_set_u_factor(long jarg1, StopPow_LP jarg1_, double jarg2);
  public final static native void StopPow_LP_use_published_collective(long jarg1, StopPow_LP jarg1_, boolean jarg2);
  public final static native void StopPow_LP_use_classical_LogL(long jarg1, StopPow_LP jarg1_, boolean jarg2);
  public final static native double StopPow_LP_get_Emin(long jarg1, StopPow_LP jarg1_);
  public final static native double StopPow_LP_get_Emax(long jarg1, StopPow_LP jarg1_);
  public final static native long new_StopPow_BetheBloch(double jarg1, double jarg2, long jarg3, DoubleVector jarg3_, long jarg4, DoubleVector jarg4_, long jarg5, DoubleVector jarg5_) throws IllegalArgumentException;
  public final static native void delete_StopPow_BetheBloch(long jarg1);
  public final static native double StopPow_BetheBloch_dEdx_MeV_um(long jarg1, StopPow_BetheBloch jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_BetheBloch_dEdx_MeV_mgcm2(long jarg1, StopPow_BetheBloch jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_BetheBloch_get_Emin(long jarg1, StopPow_BetheBloch jarg1_);
  public final static native double StopPow_BetheBloch_get_Emax(long jarg1, StopPow_BetheBloch jarg1_);
  public final static native void StopPow_BetheBloch_use_shell_correction(long jarg1, StopPow_BetheBloch jarg1_, boolean jarg2);
  public final static native boolean StopPow_BetheBloch_using_shell_correction(long jarg1, StopPow_BetheBloch jarg1_);
  public final static native void StopPow_BetheBloch_set_Ibar(long jarg1, StopPow_BetheBloch jarg1_, long jarg2, DoubleVector jarg2_) throws IllegalArgumentException;
  public final static native double StopPow_BetheBloch_Ibar(long jarg1, StopPow_BetheBloch jarg1_, double jarg2);
  public final static native long new_StopPow_AZ__SWIG_0(int jarg1) throws IllegalArgumentException;
  public final static native long new_StopPow_AZ__SWIG_1(int jarg1, double jarg2) throws IllegalArgumentException;
  public final static native void delete_StopPow_AZ(long jarg1);
  public final static native double StopPow_AZ_dEdx_MeV_um(long jarg1, StopPow_AZ jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_AZ_dEdx_MeV_mgcm2(long jarg1, StopPow_AZ jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_AZ_get_Emin(long jarg1, StopPow_AZ jarg1_);
  public final static native double StopPow_AZ_get_Emax(long jarg1, StopPow_AZ jarg1_);
  public final static native long new_StopPow_Mehlhorn__SWIG_0(double jarg1, double jarg2, long jarg3, DoubleVector jarg3_, long jarg4, DoubleVector jarg4_, long jarg5, DoubleVector jarg5_, long jarg6, DoubleVector jarg6_, long jarg7, DoubleVector jarg7_, double jarg8) throws IllegalArgumentException;
  public final static native long new_StopPow_Mehlhorn__SWIG_1(double jarg1, double jarg2, long jarg3, double jarg4) throws IllegalArgumentException;
  public final static native void delete_StopPow_Mehlhorn(long jarg1);
  public final static native double StopPow_Mehlhorn_dEdx_MeV_um(long jarg1, StopPow_Mehlhorn jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_Mehlhorn_dEdx_MeV_mgcm2(long jarg1, StopPow_Mehlhorn jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_Mehlhorn_get_Emin(long jarg1, StopPow_Mehlhorn jarg1_);
  public final static native double StopPow_Mehlhorn_get_Emax(long jarg1, StopPow_Mehlhorn jarg1_);
  public final static native double StopPow_Mehlhorn_Ibar(long jarg1, StopPow_Mehlhorn jarg1_, double jarg2, int jarg3);
  public final static native void StopPow_Mehlhorn_set_Ibar(long jarg1, StopPow_Mehlhorn jarg1_, long jarg2, DoubleVector jarg2_) throws IllegalArgumentException;
  public final static native long new_StopPow_Grabowski__SWIG_0(double jarg1, double jarg2, long jarg3, DoubleVector jarg3_, long jarg4, DoubleVector jarg4_, long jarg5, DoubleVector jarg5_, long jarg6, DoubleVector jarg6_) throws IllegalArgumentException;
  public final static native long new_StopPow_Grabowski__SWIG_1(double jarg1, double jarg2, long jarg3) throws IllegalArgumentException;
  public final static native long new_StopPow_Grabowski__SWIG_2(double jarg1, double jarg2, long jarg3, DoubleVector jarg3_, long jarg4, DoubleVector jarg4_, long jarg5, DoubleVector jarg5_, long jarg6, DoubleVector jarg6_, double jarg7) throws IllegalArgumentException;
  public final static native long new_StopPow_Grabowski__SWIG_3(double jarg1, double jarg2, long jarg3, double jarg4) throws IllegalArgumentException;
  public final static native void delete_StopPow_Grabowski(long jarg1);
  public final static native double StopPow_Grabowski_dEdx_MeV_um(long jarg1, StopPow_Grabowski jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_Grabowski_dEdx_MeV_mgcm2(long jarg1, StopPow_Grabowski jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_Grabowski_dEdx_field(long jarg1, StopPow_Grabowski jarg1_, double jarg2, int jarg3) throws IllegalArgumentException;
  public final static native double StopPow_Grabowski_get_Emin(long jarg1, StopPow_Grabowski jarg1_);
  public final static native double StopPow_Grabowski_get_Emax(long jarg1, StopPow_Grabowski jarg1_);
  public final static native long new_StopPow_Zimmerman__SWIG_0(double jarg1, double jarg2, long jarg3, DoubleVector jarg3_, long jarg4, DoubleVector jarg4_, long jarg5, DoubleVector jarg5_, long jarg6, DoubleVector jarg6_, long jarg7, DoubleVector jarg7_, double jarg8) throws IllegalArgumentException;
  public final static native long new_StopPow_Zimmerman__SWIG_1(double jarg1, double jarg2, long jarg3, double jarg4) throws IllegalArgumentException;
  public final static native void delete_StopPow_Zimmerman(long jarg1);
  public final static native double StopPow_Zimmerman_dEdx_MeV_um(long jarg1, StopPow_Zimmerman jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_Zimmerman_dEdx_MeV_mgcm2(long jarg1, StopPow_Zimmerman jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_Zimmerman_get_Emin(long jarg1, StopPow_Zimmerman jarg1_);
  public final static native double StopPow_Zimmerman_get_Emax(long jarg1, StopPow_Zimmerman jarg1_);
  public final static native double StopPow_Zimmerman_dEdx_free_electron(long jarg1, StopPow_Zimmerman jarg1_, double jarg2);
  public final static native double StopPow_Zimmerman_dEdx_bound_electron(long jarg1, StopPow_Zimmerman jarg1_, double jarg2);
  public final static native double StopPow_Zimmerman_dEdx_ion(long jarg1, StopPow_Zimmerman jarg1_, double jarg2);
  public final static native void StopPow_Zimmerman_set_quantum(long jarg1, StopPow_Zimmerman jarg1_, boolean jarg2);
  public final static native long new_StopPow_BPS__SWIG_0(double jarg1, double jarg2, long jarg3, DoubleVector jarg3_, long jarg4, DoubleVector jarg4_, long jarg5, DoubleVector jarg5_, long jarg6, DoubleVector jarg6_) throws IllegalArgumentException;
  public final static native long new_StopPow_BPS__SWIG_1(double jarg1, double jarg2, long jarg3) throws IllegalArgumentException;
  public final static native long new_StopPow_BPS__SWIG_2(double jarg1, double jarg2, long jarg3, DoubleVector jarg3_, long jarg4, DoubleVector jarg4_, long jarg5, DoubleVector jarg5_, long jarg6, DoubleVector jarg6_, double jarg7) throws IllegalArgumentException;
  public final static native long new_StopPow_BPS__SWIG_3(double jarg1, double jarg2, long jarg3, double jarg4) throws IllegalArgumentException;
  public final static native void delete_StopPow_BPS(long jarg1);
  public final static native double StopPow_BPS_dEdx_MeV_um(long jarg1, StopPow_BPS jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_BPS_dEdx_MeV_mgcm2(long jarg1, StopPow_BPS jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_BPS_dEdx_field(long jarg1, StopPow_BPS jarg1_, double jarg2, int jarg3) throws IllegalArgumentException;
  public final static native double StopPow_BPS_dEdx_short__SWIG_0(long jarg1, StopPow_BPS jarg1_, double jarg2);
  public final static native double StopPow_BPS_dEdx_short__SWIG_1(long jarg1, StopPow_BPS jarg1_, double jarg2, int jarg3);
  public final static native double StopPow_BPS_dEdx_long__SWIG_0(long jarg1, StopPow_BPS jarg1_, double jarg2);
  public final static native double StopPow_BPS_dEdx_long__SWIG_1(long jarg1, StopPow_BPS jarg1_, double jarg2, int jarg3);
  public final static native double StopPow_BPS_dEdx_quantum__SWIG_0(long jarg1, StopPow_BPS jarg1_, double jarg2);
  public final static native double StopPow_BPS_dEdx_quantum__SWIG_1(long jarg1, StopPow_BPS jarg1_, double jarg2, int jarg3);
  public final static native double StopPow_BPS_get_Emin(long jarg1, StopPow_BPS jarg1_);
  public final static native double StopPow_BPS_get_Emax(long jarg1, StopPow_BPS jarg1_);
  public final static native double StopPow_BPS_Fc_real(long jarg1, StopPow_BPS jarg1_, double jarg2);
  public final static native double StopPow_BPS_Fc_imag(long jarg1, StopPow_BPS jarg1_, double jarg2);
  public final static native long new_StopPow_Fit__SWIG_0(double jarg1, double jarg2, long jarg3, DoubleVector jarg3_, long jarg4, DoubleVector jarg4_, long jarg5, DoubleVector jarg5_, long jarg6, DoubleVector jarg6_, long jarg7, DoubleVector jarg7_, double jarg8) throws IllegalArgumentException;
  public final static native long new_StopPow_Fit__SWIG_1(double jarg1, double jarg2, long jarg3, double jarg4) throws IllegalArgumentException;
  public final static native void delete_StopPow_Fit(long jarg1);
  public final static native double StopPow_Fit_dEdx_MeV_um(long jarg1, StopPow_Fit jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_Fit_dEdx_MeV_mgcm2(long jarg1, StopPow_Fit jarg1_, double jarg2) throws IllegalArgumentException;
  public final static native double StopPow_Fit_get_Emin(long jarg1, StopPow_Fit jarg1_);
  public final static native double StopPow_Fit_get_Emax(long jarg1, StopPow_Fit jarg1_);
  public final static native void StopPow_Fit_normalize_bound_e(long jarg1, StopPow_Fit jarg1_, long jarg2, StopPow jarg2_, double jarg3);
  public final static native int StopPow_Fit_MODE_ZIMMERMAN_get();
  public final static native int StopPow_Fit_MODE_LP_get();
  public final static native int StopPow_Fit_MODE_LP_PUB_get();
  public final static native int StopPow_Fit_MODE_BPS_get();
  public final static native int StopPow_Fit_MODE_GRABOWSKI_get();
  public final static native int StopPow_Fit_MODE_QUANTUM_GRABOWSKI_get();
  public final static native void StopPow_Fit_choose_model(long jarg1, StopPow_Fit jarg1_, int jarg2) throws IllegalArgumentException;
  public final static native void StopPow_Fit_set_factor(long jarg1, StopPow_Fit jarg1_, double jarg2);
  public final static native double StopPow_Fit_get_factor(long jarg1, StopPow_Fit jarg1_);
  public final static native double PLOT_DEFAULT_NUM_POINTS_get();
  public final static native boolean get_dEdx_vs_E__SWIG_0(long jarg1, StopPow jarg1_, long jarg2, DoubleVector2D jarg2_);
  public final static native boolean get_dEdx_vs_E__SWIG_1(long jarg1, StopPow jarg1_, int jarg2, long jarg3, DoubleVector2D jarg3_);
  public final static native boolean get_dEdx_vs_E__SWIG_2(long jarg1, StopPow jarg1_, double jarg2, double jarg3, int jarg4, long jarg5, DoubleVector2D jarg5_);
  public final static native boolean get_Range_vs_E__SWIG_0(long jarg1, StopPow jarg1_, long jarg2, DoubleVector2D jarg2_);
  public final static native boolean get_Range_vs_E__SWIG_1(long jarg1, StopPow jarg1_, int jarg2, long jarg3, DoubleVector2D jarg3_);
  public final static native boolean get_Range_vs_E__SWIG_2(long jarg1, StopPow jarg1_, double jarg2, double jarg3, int jarg4, long jarg5, DoubleVector2D jarg5_);
  public final static native boolean get_Eout_vs_Ein__SWIG_0(long jarg1, StopPow jarg1_, double jarg2, long jarg3, DoubleVector2D jarg3_);
  public final static native boolean get_Eout_vs_Ein__SWIG_1(long jarg1, StopPow jarg1_, int jarg2, double jarg3, long jarg4, DoubleVector2D jarg4_);
  public final static native boolean get_Eout_vs_Ein__SWIG_2(long jarg1, StopPow jarg1_, double jarg2, double jarg3, int jarg4, double jarg5, long jarg6, DoubleVector2D jarg6_);
  public final static native boolean get_Eout_vs_Thickness__SWIG_0(long jarg1, StopPow jarg1_, double jarg2, long jarg3, DoubleVector2D jarg3_);
  public final static native boolean get_Eout_vs_Thickness__SWIG_1(long jarg1, StopPow jarg1_, int jarg2, double jarg3, long jarg4, DoubleVector2D jarg4_);
  public final static native boolean get_Eout_vs_Thickness__SWIG_2(long jarg1, StopPow jarg1_, double jarg2, double jarg3, int jarg4, double jarg5, long jarg6, DoubleVector2D jarg6_);
  public final static native boolean get_Ein_vs_Eout__SWIG_0(long jarg1, StopPow jarg1_, double jarg2, long jarg3, DoubleVector2D jarg3_);
  public final static native boolean get_Ein_vs_Eout__SWIG_1(long jarg1, StopPow jarg1_, int jarg2, double jarg3, long jarg4, DoubleVector2D jarg4_);
  public final static native boolean get_Ein_vs_Eout__SWIG_2(long jarg1, StopPow jarg1_, double jarg2, double jarg3, int jarg4, double jarg5, long jarg6, DoubleVector2D jarg6_);
  public final static native boolean get_Ein_vs_Thickness__SWIG_0(long jarg1, StopPow jarg1_, double jarg2, long jarg3, DoubleVector2D jarg3_);
  public final static native boolean get_Ein_vs_Thickness__SWIG_1(long jarg1, StopPow jarg1_, int jarg2, double jarg3, long jarg4, DoubleVector2D jarg4_);
  public final static native boolean get_Ein_vs_Thickness__SWIG_2(long jarg1, StopPow jarg1_, double jarg2, double jarg3, int jarg4, double jarg5, long jarg6, DoubleVector2D jarg6_);
  public final static native boolean get_Thickness_vs_Eout__SWIG_0(long jarg1, StopPow jarg1_, double jarg2, long jarg3, DoubleVector2D jarg3_);
  public final static native boolean get_Thickness_vs_Eout__SWIG_1(long jarg1, StopPow jarg1_, int jarg2, double jarg3, long jarg4, DoubleVector2D jarg4_);
  public final static native boolean get_Thickness_vs_Eout__SWIG_2(long jarg1, StopPow jarg1_, double jarg2, double jarg3, int jarg4, double jarg5, long jarg6, DoubleVector2D jarg6_);
  public final static native boolean get_Thickness_vs_Ein__SWIG_0(long jarg1, StopPow jarg1_, double jarg2, long jarg3, DoubleVector2D jarg3_);
  public final static native boolean get_Thickness_vs_Ein__SWIG_1(long jarg1, StopPow jarg1_, int jarg2, double jarg3, long jarg4, DoubleVector2D jarg4_);
  public final static native boolean get_Thickness_vs_Ein__SWIG_2(long jarg1, StopPow jarg1_, double jarg2, double jarg3, int jarg4, double jarg5, long jarg6, DoubleVector2D jarg6_);
  public final static native double AtomicData_get_AMU(int jarg1);
  public final static native double AtomicData_get_rho(int jarg1);
  public final static native String AtomicData_get_symbol(int jarg1);
  public final static native int AtomicData_get_num_from_symbol(String jarg1);
  public final static native String AtomicData_get_name(int jarg1);
  public final static native int AtomicData_get_num_from_name(String jarg1);
  public final static native double AtomicData_get_mean_ionization(int jarg1);
  public final static native long AtomicData_get_shell_coeff(int jarg1);
  public final static native int AtomicData_n_get();
  public final static native long new_AtomicData();
  public final static native void delete_AtomicData(long jarg1);
  public final static native void shift__SWIG_0(long jarg1, StopPow jarg1_, double jarg2, long jarg3, DoubleVector jarg3_, long jarg4, DoubleVector jarg4_) throws IllegalArgumentException;
  public final static native void shift__SWIG_1(long jarg1, StopPow jarg1_, double jarg2, long jarg3, DoubleVector jarg3_, long jarg4, DoubleVector jarg4_, long jarg5, DoubleVector jarg5_) throws IllegalArgumentException;
  public final static native boolean fit_Gaussian(long jarg1, DoubleVector jarg1_, long jarg2, DoubleVector jarg2_, long jarg3, DoubleVector jarg3_, long jarg4, DoubleVector jarg4_, long jarg5, DoubleVector jarg5_, long jarg6, boolean jarg7);
  public final static native boolean fit_rhoR(long jarg1, DoubleVector jarg1_, long jarg2, DoubleVector jarg2_, long jarg3, DoubleVector jarg3_, double jarg4, long jarg5, DoubleVector jarg5_, long jarg6, DoubleVector jarg6_, long jarg7, long jarg8, StopPow jarg8_, double jarg9, double jarg10, long jarg11, long jarg12, boolean jarg13);
  public final static native boolean forward_fit_rhoR(long jarg1, DoubleVector jarg1_, long jarg2, DoubleVector jarg2_, long jarg3, DoubleVector jarg3_, double jarg4, long jarg5, long jarg6, StopPow jarg6_, double jarg7, double jarg8, long jarg9, DoubleVector jarg9_, long jarg10, DoubleVector jarg10_, boolean jarg11);
  public final static native boolean deconvolve_fit_rhoR(long jarg1, DoubleVector jarg1_, long jarg2, DoubleVector jarg2_, long jarg3, DoubleVector jarg3_, double jarg4, long jarg5, long jarg6, StopPow jarg6_, double jarg7, double jarg8, long jarg9, DoubleVector jarg9_, long jarg10, DoubleVector jarg10_, boolean jarg11);
  public final static native boolean forward_fit_dEdx(long jarg1, DoubleVector jarg1_, long jarg2, DoubleVector jarg2_, long jarg3, DoubleVector jarg3_, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, long jarg11, StopPow_Fit jarg11_, long jarg12, long jarg13, DoubleVector jarg13_, long jarg14, DoubleVector jarg14_, boolean jarg15);
  public final static native long StopPow_Plasma_SWIGUpcast(long jarg1);
  public final static native long StopPow_PartialIoniz_SWIGUpcast(long jarg1);
  public final static native long StopPow_SRIM_SWIGUpcast(long jarg1);
  public final static native long StopPow_LP_SWIGUpcast(long jarg1);
  public final static native long StopPow_BetheBloch_SWIGUpcast(long jarg1);
  public final static native long StopPow_AZ_SWIGUpcast(long jarg1);
  public final static native long StopPow_Mehlhorn_SWIGUpcast(long jarg1);
  public final static native long StopPow_Grabowski_SWIGUpcast(long jarg1);
  public final static native long StopPow_Zimmerman_SWIGUpcast(long jarg1);
  public final static native long StopPow_BPS_SWIGUpcast(long jarg1);
  public final static native long StopPow_Fit_SWIGUpcast(long jarg1);
}
